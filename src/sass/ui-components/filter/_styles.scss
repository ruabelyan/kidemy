@mixin generate-filter-styles {
  .FiltersBase {
    flex-direction: column;
    // border:2px solid blue;
    border-radius: calculateRem(10px);
    display: flex;
    justify-content: space-around;
    background-color: getFilterColors(filter-base-background-color);
    // box-shadow: getFilterSizes(filter-base-box-shadow) getFilterColors(filter-base-box-shadow);
    border: calculateRem(2px) solid #eeebeb;
    width: 100%;
    box-sizing: border-box;

    transition: height getFilterSizes(filter-animation-height);

    .FiltersContainer {
      box-sizing: border-box;
      width: 100%;
      padding: 0 getFilterSizes(filter-base-container-margin);
      padding-top: getFilterSizes(filter-base-container-padding-top);
      padding-bottom: getFilterSizes(filter-base-container-padding-top);

      display: grid;
      grid-template-columns: 1fr;
      grid-template-columns: repeat(auto-fill, minmax(getFilterSizes(filter-container-width), 1fr));
      grid-gap: getFilterSizes(filter-base-container-margin);

      :global {
        .item-enter {
          opacity: 0;
        }

        .item-enter-active {
          opacity: 1;
          transition: opacity 600ms ease-in;
        }

        .item-exit {
          opacity: 1;
        }

        .item-exit-active {
          opacity: 0;
          transition: opacity 600ms ease-in;
        }
      }

      .FilterContainer {
        max-height: getFilterSizes(filter-element-max-height);

        label>div {
          svg {
            width: 1.4rem;
          }
        }

        &.FilterContainerFromTo {
          @include flex();

          position: relative;
          grid-column: span 2;
        }

        &:empty {
          display: none;
        }
      }
    }

    .FiltersDropdown {
      max-width: 12rem;

      &>div>div {
        color: #444d58;

        span:first-child {
          @include flex(flex-end, center);
          border-radius: none;
          font-size: 0;

          svg {
            transform: translate(0, 0);
            width: 2.5rem;
            height: 2.5rem;
            padding: 0.3rem;
            fill: currentColor;
            border-radius: none;
            box-sizing: border-box;

            background-color: getFilterColors(filters-icon-bg);
          }
        }
      }
    }

    .FiltersDropdownIcon {
      background-color: #6400dc;
      border-radius: getFilterSizes(filter-icon-border-radius);
    }

    .ArrowIconContainer {
      transform: rotate(180deg);
    }

    .FiltersContainer,
    .Checkbox {
      transition: height getFilterSizes(filter-animation-height),
        padding-top getFilterSizes(filter-animation-padding-top);
    }

    &--closed {
      // height: getFilterSizes(filter-base-closed-height);

      .FiltersContainer,
      .Checkbox {
        height: 0;
        opacity: 0;
        padding-top: 0;
        position: relative;
        z-index: -1;

        overflow: hidden;
      }

      .ArrowIconContainer {
        transform: rotate(0);
      }
    }

    .ControlContainer {
      @include flex(space-between, center);
      padding: getFilterSizes(filter-container-from-to-padding);

      .FilterLabel {
        font-weight: getFilterSizes(filter-label-font-weight);
        color: getFilterColors(filter-label-color);
        letter-spacing: getFilterSizes(filter-label-letter-spacing);
        margin-right: getFilterSizes(filter-label-font-size);
      }

      .ToggleContainer {
        @include flex(null, center);

        .ButtonToogle {
          width: getFilterSizes(button-toogle-width);
        }

        .ClearLabelActive {
          color: getFilterColors(clear-label-active-color);
          margin-right: getFilterSizes(clear-label-active-margin-right);
          cursor: pointer;
        }

        .ClearLabel {
          color: getFilterColors(clear-label-active-color);
          opacity: getFilterSizes(clear-label-opacity);
          margin-right: getFilterSizes(clear-label-active-margin-right);
          cursor: default;
        }

        .UserFoundLabel {
          color: getFilterColors(user-found-label-color);
          letter-spacing: getFilterSizes(user-found-label-letter-spacing);
          margin-right: getFilterSizes(user-found-label-margin-right);
        }

        .ArrowIconContainer {
          width: getFilterSizes(arrow-icon-container-width);
          height: getFilterSizes(arrow-icon-container-height);
          margin: getFilterSizes(arrow-icon-container-margin);
          transition: transform getFilterSizes(arrow-icon-container-animation);
          cursor: pointer;

          svg {
            width: getFilterSizes(arrow-icon-container-width);
            height: getFilterSizes(arrow-icon-container-height);
          }
        }
      }

      .ApplyButton {
        margin: 0 getFilterSizes(control-buttons-margin);
        // background: #6400dc;
      }

      .SaveButton {
        font-size: getFilterSizes(save-button-size);
        text-decoration: none;

        &>div {
          width: getFilterSizes(save-button-icon-width);
        }

        margin-right: getFilterSizes(control-buttons-margin);

        background: none !important;
      }

      .LeftControlsContainer {
        @include flex(null, center);
      }
    }
  }

  .Checkbox {
    @include flex(null, null, $flex-wrap: wrap);
    margin: getFilterSizes(checkbox-margin);

    &:empty {
      display: none;
    }
  }

  .DividerCheckbox {
    width: getFilterSizes(divider-checkbox-width);
    margin: auto;
    border: solid getFilterSizes(divider-checkbox-border) getFilterColors(divider-checkbox-color);
    background-color: getFilterColors(divider-checkbox-color);
    margin-top: getFilterSizes(divider-checkbox-margin-top);
  }
}