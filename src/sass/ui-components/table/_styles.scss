@mixin generate-table-styles {
  .TableScroll {
    display: block;

    &--hide-box-shadow {
      width: 100%;
      box-shadow: none !important;
      background-color: transparent;
    }
  }

  .TableWrapper {
    position: relative;
  }

  .Loader {
    @include center-absolute;
    z-index: 999;
    background-color: #e4e4e400;
    height: 100%;
    width: 100%;
  }

  .ScrollTrack {
    z-index: 99 !important;
  }

  .ScrollTrackHorizontal {
    z-index: 100 !important;
  }

  .TableHead {
    position: sticky;
    top: 0;
    z-index: getTableSizes(table-head-z-index);
    @include theme(background-color, backdground-color-table-head);

    tr {
      position: relative;
      z-index: getTableSizes(table-head-tr-z-index);
    }
  }

  .TableBody {
    display: block !important;
    // min-height: getTableSizes(table-body-min-height);
  }

  .TableScroll,
  .TableContainer {
    max-width: 100%;
  }

  .TableScroll {
    @include theme(box-shadow, box-shadow-color, 3px 3px 6px 0);
    border-radius: getTableSizes(table-scroll-border-radius);
    z-index: 0;
  }

  .TableScrollVertical {
    display: block;
  }

  .TableContainer {
    border-collapse: collapse;
    width: 100%;
    @include theme(background-color, primary--color);
    opacity: 0;

    tr {
      position: relative;
      top: 0;
      left: 0;
    }

    &--ready {
      opacity: getTableSizes(table-conatiner-tr-ready-opacity);
    }

    .TableHead span {
      cursor: grab;
      user-select: none;
      color: #444d58;
    }

    .TableHead tr {
      min-height: getTableSizes(table-head-row-height);
      background-color: white;
    }

    .LastTableCell {
      margin-left: 0;
      margin-right: getTableSizes(last-table-cell-margin) !important;
      opacity: getTableSizes(last-table-cell-opacity);
    }

    .TableBody {
      tr {
        height: getTableSizes(table-body-row-height);

        &:hover {
          .ActionTableCell {
            @include flex(flex-end, center);
          }
        }

        &:last-child {
          border-bottom: none;
        }
      }
    }

    &--withSelection {

      .TableBody,
      .TableHead {

        tr td,
        tr th {
          &:first-child {
            max-width: getTableSizes(table-with-selection-width) !important;
            box-sizing: content-box !important;
            margin-left: 0;
          }
        }
      }
    }

    &--withThreeColumns {

      .TableBody,
      .TableHead {

        tr td,
        tr th {

          &:nth-child(2),
          &:nth-child(3) {
            margin-left: 0;
          }
        }
      }
    }

    .ActionTableCell {
      display: none;
    }
  }

  .TableContainer {
    &.Table {
      &--no-result {
        min-height: getTableSizes(table-no-result);
      }

      &--loading {
        position: relative;

        .IllustrationWrapper {
          display: none;
        }

        .TableHead,
        .TableBody {
          @include theme(opacity, disabled-opacity);
        }
      }
    }
  }

  .IllustrationWrapper {
    min-height: getTableSizes(illustration-wrapper-min-height);
    @include center-absolute();
    min-height: getTableSizes(illustration-wrapper-min-height);

    .Illustration {
      max-width: getTableSizes(illustration-wrapper-width);
      margin: auto;
      margin-top: getTableSizes(illustration-wrapper-margin);
    }

    .IllustrationText {
      margin: auto;
      margin-top: getTableSizes(illustration-text-margin-top);
      text-align: center;
      word-break: break-word;
      letter-spacing: getTableSizes(illustration-text-letter-spacing);
      @include theme(color, black-color);
    }
  }

  .ActionToolsStickyHorizontal {
    position: sticky;
    top: 0;
    right: 0;
    height: 0;
    width: 0;
    margin: 0;
    padding: 0;
    z-index: 1;
  }

  .ActionTools {
    position: absolute;
    top: 0;
    right: 0;
    display: block;
    height: 0;
    padding: 0;
    margin: 0;
    transform: translate(0, 0);
  }

  .ActionTableCell {
    height: getTableSizes(action-table-cell-height);
    position: absolute;
    top: 0;
    right: getTableSizes(action-table-cell-right);
    min-width: getTableSizes(action-table-cell-min-width);
    margin-top: 0;
    transform: translate(10px, -51%);
    padding-right: getTableSizes(action-table-cell-padding-right);

    // @include theme(background-color, primary, $opacity: 0.1, $useRgb: true);
    svg {
      height: calculateRem(16px);
      width: calculateRem(16px);
    }

    background: #fbfbfb;
  }

  .TableResizer {
    display: none;
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    width: getTableSizes(table-resizing-width);
    height: getTableSizes(table-resizing-height);

    &::before,
    &::after {
      content: '';
      display: inline-block;
      width: getTableSizes(table-resizing-separator-width);
      height: getTableSizes(table-resizing-height);
      background-color: getTableColors(table-resizing-color);
    }

    &--resizing {
      display: block;

      &::before,
      &::after {
        @include theme(background, primary);
      }
    }

    &::after {
      transform: translateX(getTableSizes(table-resizing-separator-margin));
    }
  }

  .TableHeadCell:hover .TableResizer {
    display: block;
  }

  .TableFooter {
    position: sticky;
    bottom: 0;
    min-height: 0 !important;
    z-index: 100;
    @include theme(background-color, primary, $opacity: 0.1, $useRgb: true);
    @include theme(border-top, primary, '1px solid');

    .TableFooterCell {
      position: relative;
      min-height: getTableSizes(table-footer-cell-height);
      @include theme(color, primary);
      font-weight: 700;

      &__generateButton {
        display: none;
      }

      span {
        transition: all 0.3s;
      }

      &--empty span {
        @include flex;
        width: 100%;
        max-width: getTableSizes(table-footer-empty-max-width);
        text-align: center;
        @include theme(background-color, black-color, $opacity: 0.6);
        height: getTableSizes(table-footer-empty-height);
        filter: blur(getTableSizes(table-footer-empty-blur));
      }

      .TableFooterCell__generateButton {
        width: getTableSizes(table-footer-generate-width);
        transform: translateX(getTableSizes(table-footer-generate-transform-x));
        display: block;
        cursor: pointer;
        @include reset-button;
        transition: color 0.3s;
        @include theme(color, primary, $opacity: 0.8);

        &:hover {
          @include theme(color, primary);
        }

        &:active {
          @include theme(color, primary, $opacity: 0.8);
        }

        div {
          width: getTableSizes(table-footer-generate-container-width);
          height: getTableSizes(table-footer-generate-container-height);
        }

        &--loading div {
          will-change: transform;
          @include rotate-animation;
        }
      }
    }
  }

  .TableFooterInfo {
    position: relative;
    cursor: default;
    font-weight: 500;
    @include theme(color, primary);

    &--With-Divider {
      margin-right: calculateRem(32px);
    }
  }

  .TableFooterInfoDivider {
    position: absolute;
    right: calculateRem(-16px);
    width: calculateRem(2px);
    height: 100%;
    @include theme(background-color, primary);
  }
}